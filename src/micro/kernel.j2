#include "data.sx"

{% block PROLOGUE %}
{% endblock %}

.align 2
.type   {{ name }}, %function
.global {{ name }}

{{ name }}:
  cbz     x0, .RETURN

  stp x19, x20, [sp, #-16]!
  stp x21, x22, [sp, #-16]!
  stp x23, x24, [sp, #-16]!
  stp x25, x26, [sp, #-16]!
  stp x27, x28, [sp, #-16]!
  stp x29, x30, [sp, #-16]!
  stp  d8,  d9, [sp, #-16]!
  stp d10, d11, [sp, #-16]!
  stp d12, d13, [sp, #-16]!
  stp d14, d15, [sp, #-16]!
  sub sp, sp, #16


{% block KERNEL_INIT_DATA %}
  ldr   x1, [x0, #data_t_nloop]
{% endblock %}

  isb
  mrs x2, cntvct_el0
  str x2, [sp]

{% block KERNEL_BODY %}
{{ name }}_loop:

{{ iet_bench( span, spec ) }}

  sub x1, x1, #1
  cbnz x1, {{ name }}_loop
{% endblock %}

  isb
  mrs x2, cntvct_el0
  ldr x3, [sp]
  sub x1, x2, x3

{% block KERNEL_FINISH %}
  str x1, [x0, #data_t_time]
{% endblock %}

  add sp, sp, #16
  ldp d14, d15, [sp], #16
  ldp d12, d13, [sp], #16
  ldp d10, d11, [sp], #16
  ldp  d8,  d9, [sp], #16
  ldp x29, x30, [sp], #16
  ldp x27, x28, [sp], #16
  ldp x25, x26, [sp], #16
  ldp x23, x24, [sp], #16
  ldp x21, x22, [sp], #16
  ldp x19, x20, [sp], #16

.RETURN:
  ret

{% block KERNEL_END %}
{% endblock %}

.size {{ name }},(. - {{ name }})

{% block EPILOGUE %}
{% endblock %}
